#!/usr/bin/env bash
basedir=/home/work/vm/win11
diskdir=$(realpath $basedir/win11_202307.qcow2)
sharedir=$(realpath ~/share)
cpuinfo="host"
mem_size=4G
pidfile="/tmp/.vm.win11.pid"
prefix_name=vmwrk-w11
cmd_notify="notify-send -u normal 'VM($prefix_name)' -t 2000"

gen_random_value() {
    val=$(echo "$RANDOM % 10000 + 1" | awk '{printf "%.4d", $0}')
    echo $val
}

startup_clients() {
    until $(remote-viewer -f -t vm-windows11 -- spice://localhost:3001 2>/dev/null);
    do
        sleep 1
    done
}

### add enlightenments
enlightenments="hv-relaxed,hv-frequencies,hv-reenlightenment"

## prepare virtiofsd share directory
rnd_val=$(gen_random_value)
workingdir=/tmp/.$prefix_name.$rnd_val
virtiofsd_dir_base=$workingdir/.fsmounts
current_shortcut_path=/tmp/.$prefix_name.current

mkdir -p $virtiofsd_dir_base/{host-share,host-documents,host-tmp,host-dl}

## generate setup.sh to workspace and run it in container
setup_file_path=$workingdir/.env-setup.sh
cat > $setup_file_path << EOF
#!/usr/bin/env bash
# Generated by script
mount -o bind,ro $HOME/Documents $virtiofsd_dir_base/host-documents
mount -o bind $HOME/share $virtiofsd_dir_base/host-share
mount -o bind /tmp $virtiofsd_dir_base/host-tmp
mount -o bind $HOME/Downloads $virtiofsd_dir_base/host-dl
## end

# create shortcut for working dir
test -L $current_shortcut_path && rm $current_shortcut_path
ln -svf $workingdir $current_shortcut_path > /dev/null 
EOF

## check qemu start ?
if [ -f $pidfile ];then 
    echo -e "PID $(cat $pidfile) exists, should make sure it is stopped.\nClean the mounts:\n\t"
    mount -l | grep -rE "$prefix_name"
    exit 1
fi

## start virtiofsd daemon
log_dir=$workingdir/logs
virtiofs_pidfile=$workingdir/.virtiofsd.pid
virtiofsd_sock_path=$workingdir/virtiofsd.sock
mkdir -p $log_dir

echo "Starting Virtiofs."
podman unshare sh $setup_file_path 
nohup podman unshare /usr/libexec/virtiofsd \
    --socket-path=$virtiofsd_sock_path \
    --shared-dir $virtiofsd_dir_base \
    --announce-submounts --sandbox chroot \
    > $log_dir/virtiofsd.log 2>&1 & 

#### save pid to file
echo $! > $virtiofs_pidfile

while [ -z "$(grep -i 'waiting' $log_dir/virtiofsd.log)" ]
do
    sleep 1
done


echo "Virtiofs Started($(cat $virtiofs_pidfile))."
## start client first
echo "Starting VM client."
startup_clients &

## start qemu
echo "Starting VM($rnd_val)."

if [ ! -z "$NOTIFY_SND" ]; then
    $cmd_notify "VM($rnd_val) Start."
fi

qemu-system-x86_64 --enable-kvm --name win11 -pidfile $pidfile \
  -boot c -rtc base=localtime \
  -cpu $cpuinfo,$enlightenments -m $mem_size \
  -smp sockets=1,cores=2 \
  -machine pc,accel=kvm,vmport=off \
  -vga qxl \
  -spice port=3001,disable-ticketing=on \
  -device virtio-serial -chardev spicevmc,id=vdagent,debug=0,name=vdagent \
  -device virtserialport,chardev=vdagent,name=com.redhat.spice.0 \
  -drive file=${diskdir},format=qcow2,media=disk,cache=writethrough \
  -nic user,model=virtio-net-pci \
  -qmp unix:$workingdir/qmp-shell.sock,server=on,wait=off \
  -device qemu-xhci,id=xhci \
  -audiodev pipewire,id=audio0 \
  -device intel-hda -device hda-duplex,audiodev=audio0 \
  -chardev socket,id=char0,path=$virtiofsd_sock_path \
  -device vhost-user-fs-pci,queue-size=1024,chardev=char0,tag=host-share \
  -object memory-backend-memfd,id=mem0,share=on,size=$mem_size \
  -numa node,memdev=mem0 \
  \
  $@ > $log_dir/qemu.log 2>&1

rm $pidfile > /dev/null 2>&1
## echo quit
echo "VM Quit with code($?)."


### clean virtiofs daemon
kill -3 $(cat $virtiofs_pidfile) > /dev/null 2>&1
podman unshare mount -l | grep -i $prefix_name | cut -d ' ' -f 3 | tr -d ' ' | xargs -I{} podman unshare umount {}
echo "Virtiofs Daemon Quit ."

if [ ! -z "$NOTIFY_SND" ]; then
    $cmd_notify "VM($rnd_val) Quit."
fi

### backup
# ,hostfwd=udp:127.0.0.1:13389-:3389,hostfwd=tcp:127.0.0.1:13389-:3389
  #-display gtk,zoom-to-fit=on -vga vmware 
    # sound card
    #-soundhw hda \
  #-device intel-hda -device hda-duplex,audiodev=hda \
  #-audiodev alsa,id=hda,out.frequency=48000,in.frequency=48000,in.buffer-length=20000,out.buffer-length=20000 \
  #-usbdevice tablet \
  #-device qemu-xhci,id=xhci \
  #-device usb-host,vendorid=0x05ac,productid=0x12a8 \
  #-device usb-host,vendorid=0x1ff7,productid=0x0200 \
  #-device usb-host,vendorid=0x05ac,productid=0x12a8 \
  ## ,p2=15,p3=12
  #
### boot install iso
  #-drive file=/home/work/Downloads/G_WIN11_X64_22621.1928JJ.iso,media=cdrom,index=2 \
  #-drive index=1,file=/home/work/vm/win11/WePE_64_V2.3.iso,media=cdrom \
  #-boot d
  #\
  #-chardev socket,id=char0,path=/tmp/vfsd-qemu-doc.sock \
  #-device vhost-user-fs-pci,queue-size=1024,chardev=char0,tag=docfs \
  #-object memory-backend-file,id=mem,size=8G,mem-path=/dev/shm,share=on \
  #-numa node,memdev=mem  \
  # virtiofsd --syslog  --shared-dir /home/work/Documents --socket-path /tmp/vfsd-win11-doc.sock --socket-group work

