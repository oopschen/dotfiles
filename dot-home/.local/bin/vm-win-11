#!/usr/bin/env bash
basedir=/home/work/vm/win11
diskdir=$(realpath $basedir/win11_202307.qcow2)
sharedir=$(realpath ~/share)
cpuinfo="Skylake-Client-noTSX-IBRS"
mem_size=8G
pidfile="/tmp/.vm.win11.pid"

gen_random_value() {
    val=$(echo "$RANDOM % 10000 + 1" | awk '{printf "%.4d", $0}')
    echo $val
}

## check cpu features
cpufeaturesintel="pcid spec-ctrl stibp ssbd pdpe1gb md-clear mds-no taa-no tsx-ctrl"
existedcpufeatures=""
for f in $cpufeaturesintel
do
  finfo=$(grep "$f" /proc/cpuinfo)
  if [ ! -z "$finfo" ]; then
    existedcpufeatures="$existedcpufeatures,+$f"
  fi
done

## prepare virtiofsd share directory
rnd_val=$(gen_random_value)
workingdir=/tmp/.vm.working.win11.$rnd_val
virtiofsd_sock_path=$workingdir/virtiofsd.sock
virtiofsd_dir_base=$workingdir/.virtiofs

mkdir -p $virtiofsd_dir_base/{host-share,host-documents}
sudo mount -o bind,ro ~/Documents $virtiofsd_dir_base/host-documents
must_umount_dirs="$virtiofsd_dir_base/host-documents"
sudo mount -o bind ~/share $virtiofsd_dir_base/host-share
must_umount_dirs="$must_umount_dirs $virtiofsd_dir_base/host-share"
## end

## check qemu start ?
if [ -f $pidfile ];then 
    echo -e "PID $(cat $pidfile) exists, should make sure it is stopped.\nClean the mounts:\n\t"
    mount -l | grep -rE ".vm.working.win11"
    exit 1
fi

## start virtiofsd daemon
log_dir=$workingdir/logs
virtiofs_pidfile=$workingdir/.virtiofsd.pid
mkdir -p $log_dir

echo "Starting Virtiofs."
nohup podman unshare /usr/libexec/virtiofsd \
    --socket-path=$virtiofsd_sock_path \
    --shared-dir $virtiofsd_dir_base \
    --announce-submounts --sandbox chroot \
    > $log_dir/virtiofsd.log 2>&1 & disown

echo $! > $virtiofs_pidfile
echo "Virtiofs Started($(cat $virtiofs_pidfile))."

## start qemu
echo "Starting VM($rnd_val)."
qemu-system-x86_64 --enable-kvm --name win11 -pidfile $pidfile \
  -smp sockets=1,cores=2,threads=2 -machine pc,accel=kvm,hmat=on,memory-backend=mem0 -m $mem_size \
  -drive file=${diskdir},format=qcow2,media=disk,cache=writethrough \
  -nic user,ipv6=off,model=e1000e,smb=${sharedir} \
  -display gtk,zoom-to-fit=on -vga vmware \
  -device qemu-xhci,id=xhci \
  -device intel-hda -device hda-duplex,audiodev=audio0 \
  -audiodev pipewire,id=audio0 \
  -boot c \
  -qmp unix:$workingdir/qmp-shell.sock,server=on,wait=off \
  -object memory-backend-memfd,id=mem0,share=on,size=$mem_size \
  -chardev socket,id=char0,path=$virtiofsd_sock_path \
  -device vhost-user-fs-pci,queue-size=1024,chardev=char0,tag=host-share \
  \
  $@ > $log_dir/qemu.log 2>&1

rm $pidfile > /dev/null 2>&1
## echo quit
echo "VM Quit with code($?)."

echo "Virtiofs Daemon Quit ."
kill -3 $(cat $virtiofs_pidfile) > /dev/null 2>&1

## clean mount
echo "Clean mount directory."
for tmp_dir in $must_umount_dirs
do
    sudo umount $tmp_dir
done

### clean virtiofs daemon

### backup
    # sound card
    #-soundhw hda \
    #-cpu $cpuinfo$existedcpufeatures \
  #-device intel-hda -device hda-duplex,audiodev=hda \
  #-audiodev alsa,id=hda,out.frequency=48000,in.frequency=48000,in.buffer-length=20000,out.buffer-length=20000 \
  #-usbdevice tablet \
  #-device qemu-xhci,id=xhci \
  #-device usb-host,vendorid=0x05ac,productid=0x12a8 \
  #-device usb-host,vendorid=0x1ff7,productid=0x0200 \
  #-device usb-host,vendorid=0x05ac,productid=0x12a8 \
  ## ,p2=15,p3=12
  #
### boot install iso
  #-drive file=/home/work/Downloads/G_WIN11_X64_22621.1928JJ.iso,media=cdrom,index=2 \
  #-drive index=1,file=/home/work/vm/win11/WePE_64_V2.3.iso,media=cdrom \
  #-boot d
  #\
  #-chardev socket,id=char0,path=/tmp/vfsd-qemu-doc.sock \
  #-device vhost-user-fs-pci,queue-size=1024,chardev=char0,tag=docfs \
  #-object memory-backend-file,id=mem,size=8G,mem-path=/dev/shm,share=on \
  #-numa node,memdev=mem  \
  # virtiofsd --syslog  --shared-dir /home/work/Documents --socket-path /tmp/vfsd-win11-doc.sock --socket-group work

